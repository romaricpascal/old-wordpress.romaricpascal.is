// 1. Settings
$rp-purple: #260b23;
$rp-red: #c54d58;
$rp-cream: #f8efe0;

$rp-logo-size: 4.25rem;
$rp-header-spacing: 0.5em;

// SASS-MQ breakpoints
$mq-breakpoints: (
  horizontalMenu: 670px
);

$rp-copy-font-family: questasans_regular;
$rp-display-font-family: filson-soft;

$rp-font-size-huge: 6.25vw;

// 2. Tools
@import "../node_modules/sass-mq/_mq.scss";
@import "../node_modules/inuitcss/tools/_tools.hidden.scss";

@mixin light-on-dark {
  background: $rp-purple;
  color: $rp-cream;
}

.t-light-on-dark {
  @include light-on-dark;
}

@mixin dark-on-light {
  background-color: $rp-cream;
  color: $rp-purple;
}

.t-dark-on-light {
  @include dark-on-light;
}

@mixin light-on-red {
  background-color: $rp-red;
  color: $rp-cream;
}

.t-light-on-red {
  @include light-on-red;
}

@mixin font-face($font-family) {

  @font-face {
    font-family: $font-family;
    src: url('assets/fonts/#{$font-family}.eot');
    src: url('assets/fonts/#{$font-family}.eot?#iefix') format('embedded-opentype'),
         url('assets/fonts/#{$font-family}.woff2') format('woff2'),
         url('assets/fonts/#{$font-family}.woff') format('woff'),
         url('assets/fonts/#{$font-family}.ttf') format('truetype'),
         url('assets/fonts/#{$font-family}.svg##{$font-family}') format('svg');
  }

}

@include font-face($rp-copy-font-family);
@include font-face($rp-display-font-family);

@mixin typo-copy {
  font-family: $rp-copy-font-family, sans-serif;
}

.t-typo-copy {
  @include typo-copy;
}

@mixin typo-display {
  font-family: $rp-display-font-family, sans-serif;
}

.t-typo-display {
  @include typo-display;
}

.t-hidden-visually {
  @include inuit-hidden-visually;
}

// 3. Generic
@import '../node_modules/normalize.css/normalize';

// 4. Base
* {
  box-sizing: border-box;
}

body {
  @include dark-on-light;
  @include typo-copy;

  // @include mq($from: )
}

a {
  color: $rp-red;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

h1, h2, h3, h4, h5, h6 {
  @include typo-display;
  font-weight: normal;
  display: inline-block;
}

// 5. Components
.rp-MenuLink {
  color: $rp-cream;
}

.rp-Logo {

  height: $rp-logo-size;
  width: $rp-logo-size;
  border-radius: 9999px;

  @include light-on-dark;
}

.rp-LogoImage {
  height: 100%;
  width: 100%;
}

.rp-Header {
  @include light-on-dark;
  @include typo-display;
  min-height: $rp-logo-size/2;

  font-size: 16px;
  line-height: $rp-logo-size/2;

  position: relative;

  &__logo {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
  }

  &__menu {
    @include mq($from: horizontalMenu) {
      position: absolute;
      right: 50%;
      transform: translateX(-$rp-logo-size/2);

      margin-right: 2*$rp-header-spacing;
    }
  }

  &__contact {
    @include mq($from: horizontalMenu) {
      position: absolute;
      left: 50%;
      transform: translateX($rp-logo-size/2);
      margin-left: 2*$rp-header-spacing;
    }
  }
}

.rp-MainNav:not(:target) {
  @include mq($until: horizontalMenu) {
    display: none;
  }
}

.rp-MenuControl {
  @include mq($from: horizontalMenu) {
    display:none;
  }
}

.rp-Menu {
  list-style-type: none;
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.menu-item {
  @include mq($from: horizontalMenu) {
    display: inline-block;
    margin-left: $rp-header-spacing;
  }

  @include mq($until: horizontalMenu) {
    padding-left: 20px;
  }
}

.menu-item a {
  color: $rp-cream;
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}

.current_page_item {

  @include mq($until: horizontalMenu) {
    border-left: solid 5px $rp-red;
  }

  @include mq($from: horizontalMenu) {
    border-bottom: solid 5px $rp-red;
  }
}

.rp-LandingSection {
  padding: 2rem 1rem;
}

.rp-SectionTitle {
  @include typo-display;
  font-size: $rp-font-size-huge;
}

.l-Container {
  max-width: 43rem;
  margin-left: auto;
  margin-right: auto;
}

.rp-Hero {
  font-size: $rp-font-size-huge;
  padding-top: 2.5em;
  padding-bottom: 2.5em;

  h1 {
    margin: 0;
    margin-bottom: -0.25em;
  }
}

.rp-Underlined {

  overflow-x: hidden;

  &::after {
    content: '';
    display: block;
    background: $rp-red;
    height: 0.1em;
    transform: skewX(-39deg) translateX(-5px);
  }

  &-hero::after {
    width: 7.61em;
  }
}
